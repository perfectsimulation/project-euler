/*	Problem 44
	Pentagon Numbers

	Pentagonal numbers are generated by the formula, Pn = n(3n−1)/2.
	The first ten pentagonal numbers are:

	1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

	It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
	70 − 22 = 48, is not pentagonal.

	Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
	difference are pentagonal and D = |Pk − Pj| is minimised;
	what is the value of D?
*/

#include <algorithm>
#include <cmath>
#include <iostream>
#include <limits>

using namespace std;

int getPentNum (int n) {
	return (n * ((3 * n) - 1)) / 2;
}

bool isPentagonal (int n) {
	double val = (sqrt ((24 * n) + 1) + 1) / 6;
	if (val == int (val)) {
		return true;
	}
	return false;
}

bool isSumPent (int j, int k) {
	int sumPents = j + k;
	if (isPentagonal (sumPents)) {
		return true;
	}
	return false;
}

bool isDiffPent (int j, int k) {
	int diffPents = k - j;
	if (isPentagonal (diffPents)) {
		return true;
	}
	return false;
}

int main () {

	for (int j = 1; j < 5000; j++) {
		int pj = getPentNum (j);

		for (int k = j + 1; k < 5000; k++) {
			int pk = getPentNum (k);
			if (isSumPent (pj, pk) && isDiffPent (pj, pk)) {
				int d = pk - pj;
				cout << "pj: " << pj << " for j = " << j << endl;
				cout << "pk: " << pk << " for k = " << k << endl;
				cout << "d = " << d << endl;
				break;
			}
		}
	}

}